version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: interview-prep-db-dev
    environment:
      POSTGRES_USER: interview_user
      POSTGRES_PASSWORD: interview_pass
      POSTGRES_DB: interview_prep
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U interview_user -d interview_prep"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend with hot reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: interview-prep-backend-dev
    environment:
      DATABASE_URL: postgresql://interview_user:interview_pass@postgres:5432/interview_prep?sslmode=disable
      PORT: 8080
      NODE_ENV: development
      GIN_MODE: debug
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - go_modules:/go/pkg/mod
    command: air

  # React Frontend with hot reload
  frontend:
    image: node:18-alpine
    container_name: interview-prep-frontend-dev
    working_dir: /app
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    command: sh -c "npm install && npm start"
    depends_on:
      - backend

volumes:
  postgres_data_dev:
  go_modules:
  node_modules: 